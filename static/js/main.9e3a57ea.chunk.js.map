{"version":3,"sources":["utils/index.js","constants.js","components/icon.js","components/box.js","components/nodeEmpty.js","components/nodeStats.js","components/table.js","components/nodePools.js","components/nodeWallet.js","components/nodeChart.js","components/nodeHistory.js","components/nodeManualTransaction.js","components/node.js","components/modalConfigureAddress.js","App.js","index.js"],"names":["state","stateListeners","useGlobalState","key","alt","useState","value","setValue","useEffect","onChange","push","splice","indexOf","forEach","fn","midgardRequest","network","path","apiRequest","api","fetch","then","res","a","status","Error","text","json","merge","o1","o2","Object","assign","padLeft","num","len","ch","numText","toString","i","length","formatAddress","address","slice","formatMoney","n","intp","parseFloat","toFixed","replace","decp","split","formatDate","dateString","d","Date","getFullYear","getMonth","getDate","join","formatTime","getHours","getMinutes","getSeconds","isValidThorAddress","match","window","globalState","defaultWorksapces","JSON","stringify","name","root","type","size","data","defaultWallets","selected","connected","watched","Icon","props","className","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Box","title","updateWorkspace","children","onSelectType","node","onSplit","direction","top","bottom","left","right","onClick","bind","NodeEmpty","e","preventDefault","NodeStats","stats","parseInt","runeDepth","Math","pow","runePriceUSD","swapVolume","swapCount24h","dailyActiveUsers","swapCount30d","monthlyActiveUsers","swapCount","uniqueSwapperCount","impermanentLossProtectionPaid","Table","headers","rows","defaultSort","onSortChange","propsFilters","filters","propsOnFilterChange","onFilterChange","setFilters","id","sort","setSort","headerId","newValue","target","newFilters","onSort","newSort","filteredRows","filter","r","sortProp","b","v1","v2","reverse","map","h","class","style","v","NodePools","pools","onDataChange","p","price","assetPriceUSD","depth","assetDepth","volume","volume24h","assetPrice","asset","priceValue","apy","poolAPY","apyValue","depthValue","volumeValue","NodeWallet","wallet","addressPools","setAddressPools","addressBalances","setAddressBalances","update","handle","setInterval","clearInterval","result","thornodeRequest","balances","denom","amount","valueValue","assetAmount","assetAmountValue","assetRemoved","runeAdded","runeRemoved","start","pool","find","pp","amountRune","runeWithdrawn","amountAsset","assetAdded","assetWithdrawn","assetRemovedValue","runeAddedValue","runeRemovedValue","dateFirstAdded","NodeChart","chartRef","useRef","setAsset","range","setRange","prices","setPrices","loadData","queryMap","intervals","el","current","lastChild","removeChild","rect","getBoundingClientRect","chart","createChart","width","height","layout","backgroundColor","textColor","fontSize","fontFamily","vertLines","color","visible","horzLines","timeScale","fixLeftEdge","timeVisible","addAreaSeries","bottomColor","lineColor","setData","time","startTime","setVisibleLogicalRange","from","to","display","flexDirection","padding","newAsset","marginRight","newRange","flex","ref","NodeHistory","addressActions","setAddressActions","actions","asset2","in","coins","out","date","timeValue","amountValue","thorchainTransaction","action","memo","recipient","Promise","resolve","reject","xfi","thorchain","request","method","params","decimals","err","NodeManualTransaction","txId","error","setError","isLoading","setIsLoading","transactionId","setTransactionId","percent","options","setOptions","computeMemo","limit","toUpperCase","assym","onOptionChange","newOptions","Number","isNaN","includes","console","onSubmit","placeholder","min","max","step","disabled","href","Node","nodeRef","isDragging","setIsDragging","onMouseMove","nodes","querySelectorAll","percentWidth","clientX","clientY","round","flexBasis","concat","onMouseDown","onMouseUp","removeEventListener","addEventListener","renderNode","ModalConfigureAddress","onClose","wallets","setWallets","newWatchedAddress","setNewWatchedAddress","newWatchedLabel","setNewWatchedLabel","onSelect","w","onCopy","stopPropagation","navigator","clipboard","writeText","onRemove","index","_","handler","alert","accounts","log","message","newWallet","label","startsWith","nodeSiblingNameMap","WorkspacesNav","workspaces","setWorkspaces","selectedWorkspaceIndex","setSelectedWorkspaceIndex","newName","prompt","localStorage","App","modal","setModal","setPools","setStats","parse","selectedWorkspace","updated","refresh","parent","reduce","leaf","tail","globalWorkspaces","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e3a57ea.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst state = {};\nconst stateListeners = [];\nwindow.globalState = state;\n\nexport function useGlobalState(key, alt) {\n  const [value, setValue] = useState(state[key] || alt);\n  useEffect(() => {\n    const onChange = () => {\n      if (value !== state[key] || alt) {\n        setValue(state[key] || alt);\n      }\n    };\n    stateListeners.push(onChange);\n    return () => stateListeners.splice(stateListeners.indexOf(onChange), 1);\n  }, []);\n  const onSet = (value) => {\n    state[key] = value;\n    stateListeners.forEach((fn) => fn());\n  };\n  return [value, onSet];\n}\n\nexport function midgardRequest(network, path) {\n  return apiRequest(\"midgard\", network, \"/v2\" + path);\n}\n\nexport function thornodeRequest(network, path) {\n  return apiRequest(\"thornode\", network, path);\n}\n\nexport function apiRequest(api, network, path) {\n  return fetch(\n    `https://${\n      network === \"testnet\" ? \"testnet.\" : \"\"\n    }${api}.thorchain.info${path}`\n  ).then(async (res) => {\n    if (res.status !== 200) {\n      throw new Error(\n        \"Non 2xx response code: \" + res.status + \": \" + (await res.text())\n      );\n    }\n    return res.json();\n  });\n}\n\nexport function merge(o1, o2) {\n  return Object.assign(Object.assign({}, o1), o2);\n}\n\nexport function sortBy(fn, vs) {\n  return vs.sort((a, b) => {\n    const v1 = fn(a);\n    const v2 = fn(b);\n    return typeof v1 === \"number\" ? v1 - v2 : v1 > v2;\n  });\n}\n\nexport function padLeft(num, len, ch) {\n  var numText = num.toString();\n  for (var i = numText.length; i < len; i++) {\n    numText = ch + numText;\n  }\n  return numText;\n}\n\nexport function formatAddress(address) {\n  return address.slice(0, 8) + \"…\" + address.slice(-4);\n}\n\nexport function formatDecimal(val, precision) {\n  if (val === \"n/a\" || val === \"-\") return val;\n  val = parseFloat(val);\n  if (Number.isNaN(val)) val = 0;\n  return val.toFixed(precision);\n}\n\nexport function formatMoney(value, n = 0) {\n  value = parseFloat(value);\n  var intp = value.toFixed(0).replace(/(\\d)(?=(\\d{3})+$)/g, \"$1 \");\n  var decp = n > 0 ? \".\" + value.toFixed(n).split(\".\")[1] : \"\";\n  return intp + decp;\n}\n\nexport function formatDate(dateString) {\n  const d = new Date(dateString);\n  return [\n    d.getFullYear(),\n    padLeft(d.getMonth() - 1, 2, \"0\"),\n    padLeft(d.getDate(), 2, \"0\"),\n  ].join(\"-\");\n}\n\nexport function formatTime(dateString) {\n  const d = new Date(dateString);\n  return [\n    padLeft(d.getHours(), 2, \"0\"),\n    padLeft(d.getMinutes(), 2, \"0\"),\n    padLeft(d.getSeconds(), 2, \"0\"),\n  ].join(\":\");\n}\n\nexport function formatDatetime(dateString) {\n  const d = new Date(dateString);\n  return formatDate(d) + \" \" + formatTime(d);\n}\n\nexport function classForNumber(n) {\n  return n < 0 ? \"text-red\" : n > 0 ? \"text-green\" : \"\";\n}\n\nexport function isValidThorAddress(address) {\n  if (address.indexOf(\"thor\") === 0) {\n    return address.length === 43 && address.match(/^thor[a-z0-9]{39}$/);\n  } else if (address.indexOf(\"tthor\") === 0) {\n    return address.length === 44 && address.match(/^tthor[a-z0-9]{39}$/);\n  } else {\n    return false;\n  }\n}\n\nexport function explorerTransactionUrl(network, txId) {\n  return `https://${\n    network === \"testnet\" ? \"testnet.\" : \"\"\n  }thorchain.net/#/txs/${txId}`;\n}\n","export const NODE_TYPES = {\n  empty: { id: \"empty\", name: \"empty\" },\n  stats: { id: \"stats\", name: \"stats\" },\n  pools: { id: \"pools\", name: \"pools\" },\n  chart: { id: \"chart\", name: \"chart\" },\n  wallet: { id: \"wallet\", name: \"wallet\" },\n  history: { id: \"history\", name: \"history\" },\n  manualTransaction: { id: \"manualTransaction\", name: \"manual transaction\" },\n};\n\nexport const defaultWorksapces = JSON.stringify([\n  {\n    name: \"default\",\n    root: { type: \"node\", size: 100, data: { type: \"empty\" } },\n  },\n]);\n\nexport const defaultWallets = {\n  selected: null,\n  connected: null,\n  watched: [],\n};\n","import React from \"react\";\n\nfunction Icon(props) {\n  const className = \"icon h-6 w-6\";\n  switch (props.name) {\n    case \"plus\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n      );\n    case \"trash\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n          />\n        </svg>\n      );\n    case \"edit\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n          />\n        </svg>\n      );\n    case \"save\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M17 16v2a2 2 0 01-2 2H5a2 2 0 01-2-2v-7a2 2 0 012-2h2m3-4H9a2 2 0 00-2 2v7a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-1m-1 4l-3 3m0 0l-3-3m3 3V3\"\n          />\n        </svg>\n      );\n    case \"times\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M6 18L18 6M6 6l12 12\"\n          />\n        </svg>\n      );\n    case \"arrows-alt-v\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"\n          />\n        </svg>\n      );\n    case \"arrows-alt-h\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\"\n          />\n        </svg>\n      );\n    case \"chevron-up\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M5 15l7-7 7 7\"\n          />\n        </svg>\n      );\n    case \"chevron-down\":\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={className}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n      );\n    default:\n      throw new Error(\"Unknow icon name: \" + props.name);\n  }\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\n\nimport Icon from \"./icon\";\n\nexport default function Box({ title, path, updateWorkspace, children }) {\n  function onSelectType() {\n    updateWorkspace(\n      (node) => Object.assign(node, { data: { type: \"empty\" } }),\n      path\n    );\n  }\n\n  function onClose() {\n    if (path.length === 0) {\n      onSelectType();\n      return;\n    }\n    updateWorkspace(() => null, path);\n  }\n\n  function onSplit(direction) {\n    updateWorkspace((node) => {\n      if (direction === \"vertically\") {\n        return {\n          type: \"vsplit\",\n          size: node.size,\n          top: Object.assign(node, { size: 50 }),\n          bottom: { type: \"node\", size: 50, data: { type: \"empty\" } },\n        };\n      } else {\n        return {\n          type: \"hsplit\",\n          size: node.size,\n          left: Object.assign(node, { size: 50 }),\n          right: { type: \"node\", size: 50, data: { type: \"empty\" } },\n        };\n      }\n    }, path);\n  }\n\n  return (\n    <div className=\"box\">\n      <div className=\"box-header\">\n        <span\n          className=\"box-header-title\"\n          title=\"Change panel type\"\n          onClick={onSelectType}\n        >\n          {title}\n        </span>\n        <div className=\"box-header-icon\" title=\"Close\" onClick={onClose}>\n          <Icon name=\"times\" />\n        </div>\n        <div\n          className=\"box-header-icon\"\n          title=\"Split Horizontally\"\n          onClick={onSplit.bind(null, \"horizontally\")}\n        >\n          <Icon name=\"arrows-alt-h\" />\n        </div>\n        <div\n          className=\"box-header-icon\"\n          title=\"Split Vertically\"\n          onClick={onSplit.bind(null, \"vertically\")}\n        >\n          <Icon name=\"arrows-alt-v\" />\n        </div>\n      </div>\n      <div className=\"box-contents\">{children}</div>\n    </div>\n  );\n}\n","import { merge } from \"../utils\";\nimport Box from \"./box\";\n\nexport default function NodeEmpty({ path, updateWorkspace }) {\n  function onSelectType(type, e) {\n    e.preventDefault();\n    let update = (node) => merge(node, { data: { type: type } });\n    updateWorkspace(update, path);\n  }\n\n  return (\n    <Box title=\"Empty\" path={path} updateWorkspace={updateWorkspace}>\n      <div>\n        <br />\n        <p className=\"text-center\">select a panel type:</p>\n        <div className=\"node-empty\">\n          <button className=\"button\" onClick={onSelectType.bind(null, \"stats\")}>\n            <strong>stats.</strong>\n            <span>global thorchain stats.</span>\n          </button>\n          <button className=\"button\" onClick={onSelectType.bind(null, \"pools\")}>\n            <strong>pools.</strong>\n            <span>list of thorchain pools.</span>\n          </button>\n          <button\n            className=\"button\"\n            onClick={onSelectType.bind(null, \"wallet\")}\n          >\n            <strong>wallet.</strong>\n            <span>your rune, synth and lp balances.</span>\n          </button>\n          <button className=\"button\" onClick={onSelectType.bind(null, \"chart\")}>\n            <strong>chart.</strong>\n            <span>price chart for a pool.</span>\n          </button>\n          <button\n            className=\"button\"\n            onClick={onSelectType.bind(null, \"history\")}\n          >\n            <strong>history.</strong>\n            <span>action history for current address.</span>\n          </button>\n          <button\n            className=\"button\"\n            onClick={onSelectType.bind(null, \"manualTransaction\")}\n          >\n            <strong>manual transaction.</strong>\n            <span>send in a manual thorchain transaction.</span>\n          </button>\n        </div>\n      </div>\n    </Box>\n  );\n}\n","import { formatMoney, useGlobalState } from \"../utils\";\nimport Box from \"./box\";\n\nexport default function NodeStats({ path, updateWorkspace }) {\n  const [stats] = useGlobalState(\"stats\");\n  return (\n    <Box title=\"Stats\" path={path} updateWorkspace={updateWorkspace}>\n      {stats ? (\n        <div className=\"node-empty\">\n          <button className=\"button\">\n            <strong className=\"text-primary\">\n              $\n              {formatMoney(\n                ((parseInt(stats.runeDepth) * 2) / Math.pow(10, 8)) *\n                  parseFloat(stats.runePriceUSD)\n              )}\n            </strong>\n            <span>total liquidity</span>\n          </button>\n          <button className=\"button\">\n            <strong>\n              $\n              {formatMoney(\n                (parseInt(stats.swapVolume) / Math.pow(10, 8)) *\n                  parseFloat(stats.runePriceUSD)\n              )}\n            </strong>\n            <span>total swap volume</span>\n          </button>\n          <button className=\"button\">\n            <strong>{formatMoney(stats.swapCount24h)}</strong>\n            <span>24h swap count</span>\n          </button>\n          <button className=\"button\">\n            <strong>{formatMoney(stats.dailyActiveUsers)}</strong>\n            <span>24h active users</span>\n          </button>\n          <button className=\"button\">\n            <strong>{formatMoney(stats.swapCount30d)}</strong>\n            <span>30d swap count</span>\n          </button>\n          <button className=\"button\">\n            <strong>{formatMoney(stats.monthlyActiveUsers)}</strong>\n            <span>30d active users</span>\n          </button>\n          <button className=\"button\">\n            <strong>{formatMoney(stats.swapCount)}</strong>\n            <span>total swap count</span>\n          </button>\n          <button className=\"button\">\n            <strong>{formatMoney(stats.uniqueSwapperCount)}</strong>\n            <span>unique users</span>\n          </button>\n          <button className=\"button\">\n            <strong>${formatMoney(stats.runePriceUSD, 2)}</strong>\n            <span>rune price</span>\n          </button>\n          <button className=\"button\">\n            <strong>\n              $\n              {formatMoney(\n                (parseFloat(stats.impermanentLossProtectionPaid) /\n                  Math.pow(10, 8)) *\n                  parseFloat(stats.runePriceUSD)\n              )}\n            </strong>\n            <span>il paid</span>\n          </button>\n        </div>\n      ) : (\n        \"loading...\"\n      )}\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport { merge, sortBy } from \"../utils\";\n\nexport default function Table({\n  headers,\n  rows,\n  defaultSort,\n  onSortChange,\n  filters: propsFilters,\n  onFilterChange: propsOnFilterChange,\n}) {\n  const [filters, setFilters] = useState(propsFilters || {});\n  const [sort, setSort] = useState(defaultSort || \"+\" + headers[0].id);\n\n  function onFilterChange(headerId, e) {\n    let newValue = null;\n    if (e.target.value !== \"all\") {\n      newValue = e.target.value;\n    }\n    const newFilters = merge(filters, { [headerId]: newValue });\n    setFilters(newFilters);\n    if (propsOnFilterChange) {\n      propsOnFilterChange(newFilters);\n    }\n  }\n\n  function onSort(headerId) {\n    let newSort;\n    if (sort && sort.slice(1) === headerId) {\n      newSort = (sort[0] === \"+\" ? \"-\" : \"+\") + sort.slice(1);\n    } else {\n      newSort = \"+\" + headerId;\n    }\n    setSort(newSort);\n    if (onSortChange) onSortChange(newSort);\n  }\n\n  let filteredRows = rows.filter((r) => {\n    for (let i in filters) {\n      if (filters[i]) {\n        if (r[i] !== filters[i]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  });\n  let sortProp = sort.slice(1);\n  filteredRows = sortBy(\n    (r) => (sortProp + \"Value\" in r ? r[sortProp + \"Value\"] : r[sortProp]),\n    filteredRows\n  );\n  if (sort[0] === \"-\") filteredRows = filteredRows.reverse();\n\n  const valuesForFilter = (key) => {\n    const uniq = (e, i, a) => a.indexOf(e) === i;\n    return rows\n      .map((r) => r[key])\n      .filter(uniq)\n      .sort();\n  };\n\n  return (\n    <table className=\"trading-table\">\n      <thead>\n        <tr>\n          {headers.map((h) => (\n            <th key={h.id} className={h.class} style={h.style || {}}>\n              {h.filter ? (\n                <select\n                  onChange={onFilterChange.bind(null, h.id)}\n                  value={filters[h.id] || \"all\"}\n                >\n                  <option value=\"all\">all</option>\n                  {valuesForFilter(h.id).map((v) => (\n                    <option key={v} value={v}>\n                      {v}\n                    </option>\n                  ))}\n                </select>\n              ) : null}\n            </th>\n          ))}\n        </tr>\n        <tr>\n          {headers.map((h) => (\n            <th\n              key={h.id}\n              className={h.class}\n              style={h.style || {}}\n              onClick={onSort.bind(null, h.id)}\n            >\n              {sort.slice(1) === h.id ? sort[0] : \"\"}\n              {h.name || h.id}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {filteredRows.map((r, i) => (\n          <tr key={i}>\n            {headers.map((h) => (\n              <td\n                key={h.id}\n                className={h.class + \" \" + r[h.id + \"Class\"] || \"\"}\n                style={h.style || {}}\n                title={r[h.id + \"Title\"] || \"\"}\n              >\n                {r[h.id]}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { merge, formatMoney, useGlobalState } from \"../utils\";\nimport Box from \"./box\";\nimport Table from \"./table\";\n\nexport default function NodePools({ data, path, updateWorkspace }) {\n  const [pools, setPools] = useGlobalState(\"pools\", []);\n\n  function onDataChange(key, value) {\n    const updateFn = (n) => merge(n, { data: merge(n.data, { [key]: value }) });\n    updateWorkspace(updateFn, path);\n  }\n\n  const headers = [\n    { id: \"asset\", filter: true },\n    { id: \"status\", filter: true },\n    { id: \"price\", class: \"text-right\" },\n    { id: \"apy\", class: \"text-right\" },\n    { id: \"depth\", class: \"text-right\" },\n    { id: \"volume\", name: \"volume (24h)\", class: \"text-right\" },\n  ];\n  const rows = pools.map((p) => {\n    const price = parseFloat(p.assetPriceUSD);\n    const depth =\n      (parseInt(p.assetDepth) / Math.pow(10, 8)) *\n      parseFloat(p.assetPriceUSD) *\n      2;\n    const volume =\n      ((parseFloat(p.volume24h) / Math.pow(10, 8)) *\n        parseFloat(p.assetPriceUSD)) /\n        parseFloat(p.assetPrice) || 0;\n    return {\n      asset: p.asset,\n      status: p.status,\n      price: formatMoney(price, 2),\n      priceValue: price,\n      apy: formatMoney(parseFloat(p.poolAPY) * 100, 2),\n      apyValue: parseFloat(p.poolAPY),\n      depth: formatMoney(depth),\n      depthValue: depth,\n      volume: formatMoney(volume),\n      volumeValue: volume,\n    };\n  });\n  return (\n    <Box title=\"Pools\" path={path} updateWorkspace={updateWorkspace}>\n      <Table\n        headers={headers}\n        rows={rows}\n        filters={data.filters}\n        onFilterChange={onDataChange.bind(null, 'filters')}\n        defaultSort={data.sort}\n        onSortChange={onDataChange.bind(null, 'sort')}\n      />\n    </Box>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  merge,\n  formatDate,\n  formatMoney,\n  useGlobalState,\n  midgardRequest,\n  thornodeRequest,\n} from \"../utils\";\nimport Box from \"./box\";\nimport Table from \"./table\";\n\nexport default function NodeWallet({ data, path, updateWorkspace }) {\n  const [{ selected: wallet }] = useGlobalState(\"wallets\", {});\n  const [stats] = useGlobalState(\"stats\");\n  const [pools] = useGlobalState(\"pools\", []);\n  const [addressPools, setAddressPools] = useState([]);\n  const [addressBalances, setAddressBalances] = useState([]);\n\n  function onDataChange(key, value) {\n    const updateFn = (n) => merge(n, { data: merge(n.data, { [key]: value }) });\n    updateWorkspace(updateFn, path);\n  }\n\n  useEffect(() => {\n    if (!wallet?.address) return;\n    function update() {\n      midgardRequest(wallet.network, \"/member/\" + wallet.address).then(\n        (result) => setAddressPools(result.pools),\n        () => {}\n      );\n      thornodeRequest(wallet.network, \"/cosmos/bank/v1beta1/balances/\" + wallet.address).then(\n        (result) => setAddressBalances(result.balances),\n        () => {}\n      );\n    }\n    setAddressPools([]);\n    update();\n    const handle = setInterval(update, 5*1000);\n    return () => clearInterval(handle);\n  }, [wallet]);\n\n  const headers = [\n    { id: \"asset\", filter: true },\n    { id: \"value\", class: \"text-right\" },\n    { id: \"assetAmount\", name: \"asset\", class: \"text-right\" },\n    { id: \"assetRemoved\", name: \"-asset\", class: \"text-right\" },\n    { id: \"runeAdded\", name: \"rune\", class: \"text-right\" },\n    { id: \"runeRemoved\", name: \"-rune\", class: \"text-right\" },\n    { id: \"start\", name: \"first added\", class: \"text-right\" },\n  ];\n  const rows = [];\n  addressBalances.forEach((b) => {\n    if (!stats) return;\n    const price = b.denom === \"rune\" ? parseFloat(stats.runePriceUSD) : 0;\n    const amount = parseInt(b.amount) / Math.pow(10, 8);\n    rows.push({\n      asset: b.denom,\n      value: formatMoney(amount * price),\n      valueValue: amount * price,\n      assetAmount: formatMoney(amount, 2),\n      assetAmountValue: amount,\n      assetRemoved: \"\",\n      runeAdded: \"\",\n      runeRemoved: \"\",\n      start: \"\",\n    });\n  });\n  addressPools.forEach((p) => {\n    const pool = pools.find((pp) => pp.asset === p.pool);\n    if (!pool) return;\n    const amountRune =\n      (parseInt(p.runeAdded) - parseInt(p.runeWithdrawn)) / Math.pow(10, 8);\n    const amountAsset =\n      (parseInt(p.assetAdded) - parseInt(p.assetWithdrawn)) / Math.pow(10, 8);\n    const runePrice =\n      parseFloat(pool.assetPriceUSD) / parseFloat(pool.assetPrice);\n    const value =\n      amountRune * runePrice + amountAsset * parseFloat(pool.assetPrice);\n    rows.push({\n      asset: p.pool + \" Pool\",\n      value: formatMoney(value),\n      valueValue: value,\n      assetAmount: formatMoney(amountAsset, 2),\n      assetAmountValue: amountAsset,\n      assetRemoved: formatMoney(\n        parseInt(p.assetWithdrawn) / Math.pow(10, 8),\n        2\n      ),\n      assetRemovedValue: parseInt(p.assetWithdrawn),\n      runeAdded: formatMoney(parseInt(p.runeAdded) / Math.pow(10, 8), 1),\n      runeAddedValue: parseInt(p.runeAdded),\n      runeRemoved: formatMoney(parseInt(p.assetWithdrawn) / Math.pow(10, 8), 1),\n      runeRemovedValue: parseInt(p.assetWithdrawn),\n      start: formatDate(parseInt(p.dateFirstAdded) * 1000),\n    });\n  });\n  return (\n    <Box title=\"Wallet\" path={path} updateWorkspace={updateWorkspace}>\n      <Table\n        headers={headers}\n        rows={rows}\n        filters={data.filters}\n        onFilterChange={onDataChange.bind(null, 'filters')}\n        defaultSort={data.sort}\n        onSortChange={onDataChange.bind(null, 'sort')}\n      />\n    </Box>\n  );\n}\n","import { useRef, useState, useEffect } from \"react\";\nimport { createChart } from \"lightweight-charts\";\nimport { merge, formatMoney, midgardRequest, useGlobalState } from \"../utils\";\nimport Box from \"./box\";\n\nexport default function NodeChart({ data, path, updateWorkspace }) {\n  const chartRef = useRef();\n  const [{ selected: wallet }] = useGlobalState(\"wallets\", {});\n  const [pools] = useGlobalState(\"pools\", []);\n  const [asset, setAsset] = useState(data.asset || \"BTC.BTC\");\n  const [range, setRange] = useState(data.range || \"1d\");\n  const [prices, setPrices] = useState();\n\n  function loadData(asset, range) {\n    const queryMap = {\n      \"1d\": \"interval=5min&count=288\",\n      \"1w\": \"interval=hour&count=168\",\n      \"3m\": \"interval=day&count=90\",\n      \"1y\": \"interval=day&count=365\",\n    };\n    const network = wallet ? wallet.network : 'mainnet';\n    if (asset === \"THOR.RUNE\") {\n      const usdAsset = network === \"mainnet\" ? \"BNB.BUSD-BD1\" : \"BNB.BUSD-74E\";\n      midgardRequest(\n        network,\n        \"/history/depths/\" + usdAsset + \"?\" + queryMap[range]\n      ).then(\n        (result) =>\n          setPrices(\n            result.intervals.map((i) =>\n              merge(i, {\n                assetPriceUSD: 1 / parseFloat(i.assetPrice),\n              })\n            )\n          ),\n        () => {}\n      );\n    } else {\n      midgardRequest(\n        network,\n        \"/history/depths/\" + asset + \"?\" + queryMap[range]\n      ).then(\n        (result) => setPrices(result.intervals),\n        () => {}\n      );\n    }\n  }\n\n  function onAssetChange(e) {\n    const newAsset = e.target.value;\n    setAsset(newAsset);\n    const updateFn = (n) =>\n      merge(n, { data: merge(n.data, { asset: newAsset }) });\n    updateWorkspace(updateFn, path);\n  }\n  function onRangeChange(e) {\n    const newRange = e.target.value;\n    setRange(newRange);\n    const updateFn = (n) =>\n      merge(n, { data: merge(n.data, { range: newRange }) });\n    updateWorkspace(updateFn, path);\n  }\n\n  useEffect(() => {\n    loadData(asset, range);\n    const handle = setInterval(() => loadData(asset, range), 15000);\n    return () => clearInterval(handle);\n  }, [asset, range]);\n  useEffect(() => {\n    const el = chartRef.current;\n    if (!el || !prices) return;\n    while (el.lastChild) {\n      el.removeChild(el.lastChild);\n    }\n    const rect = el.getBoundingClientRect();\n    const chart = createChart(el, {\n      width: rect.width,\n      height: rect.height,\n      layout: {\n        backgroundColor: \"#111827\",\n        textColor: \"#ffffff\",\n        fontSize: 12,\n        fontFamily: \"IBM Plex Mono\",\n      },\n      vertLines: {\n        color: \"rgba(40,40,40,0.2)\",\n        style: 1,\n        visible: true,\n      },\n      horzLines: {\n        color: \"rgba(40,40,40,0.2)\",\n        style: 1,\n        visible: true,\n      },\n      timeScale: {\n        fixLeftEdge: true,\n        timeVisible: true,\n      },\n    });\n    const series = chart.addAreaSeries({\n      bottomColor: \"rgba(35, 220, 200, 0.5)\",\n      lineColor: \"rgba(35, 220, 200, 1)\",\n    });\n    series.setData(\n      prices.map((p) => ({\n        time: parseInt(p.startTime),\n        value: parseFloat(p.assetPriceUSD),\n      }))\n    );\n    chart.timeScale().setVisibleLogicalRange({\n      from: 0,\n      to: prices.length,\n    });\n  }, [chartRef.current, prices]);\n\n  return (\n    <Box title=\"Chart\" path={path} updateWorkspace={updateWorkspace}>\n      <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n        <div style={{ display: \"flex\", padding: \"4px\" }}>\n          <select\n            value={asset}\n            onChange={onAssetChange}\n            style={{ padding: \"4px 8px\", width: \"100px\", marginRight: \"8px\" }}\n          >\n            <option value=\"THOR.RUNE\">THOR.RUNE</option>\n            {pools\n              .sort((a, b) => parseInt(b.runeDepth) - parseInt(a.runeDepth))\n              .map((p) => (\n                <option value={p.asset} key={p.asset}>\n                  {p.asset.slice(0, 12)}\n                </option>\n              ))}\n          </select>\n          <select\n            value={range}\n            onChange={onRangeChange}\n            style={{ padding: \"4px 8px\", width: \"100px\" }}\n          >\n            <option value=\"1d\">past day</option>\n            <option value=\"1w\">past week</option>\n            <option value=\"3m\">past 3 months</option>\n            <option value=\"1y\">past year</option>\n          </select>\n          <div style={{ flex: \"1\" }} />\n          <div>\n            {prices\n              ? formatMoney(prices[prices.length - 1].assetPriceUSD, 2)\n              : \"\"}\n          </div>\n        </div>\n        <div style={{ flex: \"1\" }} ref={chartRef} />\n      </div>\n    </Box>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  merge,\n  formatDate,\n  formatTime,\n  formatMoney,\n  useGlobalState,\n  midgardRequest,\n} from \"../utils\";\nimport Box from \"./box\";\nimport Table from \"./table\";\n\nexport default function NodeHistory({ data, path, updateWorkspace }) {\n  const [{ selected: wallet }] = useGlobalState(\"wallets\", {});\n  const [pools] = useGlobalState(\"pools\");\n  const [addressActions, setAddressActions] = useState([]);\n\n  function onDataChange(key, value) {\n    const updateFn = (n) => merge(n, { data: merge(n.data, { [key]: value }) });\n    updateWorkspace(updateFn, path);\n  }\n\n  useEffect(() => {\n    if (!wallet?.address) return;\n    setAddressActions([]);\n    midgardRequest(\n      wallet.network,\n      \"/actions?limit=50&offset=0&address=\" + wallet.address\n    ).then(\n      (result) => setAddressActions(result.actions),\n      () => {}\n    );\n  }, [wallet]);\n\n  const headers = [\n    { id: \"time\", class: \"w-datetime\" },\n    { id: \"type\", filter: true },\n    { id: \"status\", filter: true },\n    { id: \"asset\", filter: true },\n    { id: \"asset2\", filter: true },\n    { id: \"amount\", class: \"text-right\" },\n  ];\n  const rows = [];\n  addressActions.forEach((a) => {\n    let asset = \"\";\n    let asset2 = \"\";\n    let amount = 0;\n    if (a.type === \"switch\") {\n      asset = a.in[0].coins[0].asset;\n      asset2 = a.out[0].coins[0].asset;\n      amount = parseInt(a.out[0].coins[0].amount) / Math.pow(10, 8);\n    }\n    if (a.type === \"addLiquidity\") {\n      asset = a.pools[0];\n      asset2 = a.in[0].coins[0].asset;\n      amount = parseInt(a.in[0].coins[0].amount) / Math.pow(10, 8);\n    }\n    if (a.type === \"withdraw\") {\n      asset = a.pools[0];\n      asset2 = a.out[0].coins[0].asset;\n      amount = parseInt(a.out[0].coins[0].amount) / Math.pow(10, 8);\n    }\n    if (a.type === \"swap\") {\n      asset = a.in[0].coins[0].asset;\n      if (a.out.length > 0) {\n        asset2 = a.out[0].coins[0].asset;\n        amount = parseInt(a.out[0].coins[0].amount) / Math.pow(10, 8);\n      }\n    }\n    rows.push({\n      time:\n        formatDate(parseInt(a.date) / 1000000).slice(2) +\n        \" \" +\n        formatTime(parseInt(a.date) / 1000000),\n      timeValue: parseInt(a.date),\n      type: a.type,\n      status: a.status,\n      asset: asset,\n      asset2: asset2,\n      amount: formatMoney(amount, 2),\n      amountValue: amount,\n    });\n  });\n  return (\n    <Box title=\"History\" path={path} updateWorkspace={updateWorkspace}>\n      <Table\n        headers={headers}\n        rows={rows}\n        filters={data.filters}\n        onFilterChange={onDataChange.bind(null, 'filters')}\n        defaultSort={data.sort || \"-time\"}\n        onSortChange={onDataChange.bind(null, 'sort')}\n      />\n    </Box>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  merge,\n  explorerTransactionUrl,\n  isValidThorAddress,\n  useGlobalState,\n} from \"../utils\";\nimport Box from \"./box\";\n\nfunction thorchainTransaction(\n  action,\n  { from, memo, asset, recipient, amount }\n) {\n  return new Promise((resolve, reject) => {\n    if (!window.xfi || !window.xfi.thorchain || !from) {\n      return reject(new Error(\"xdefi wallet not connected\"));\n    }\n    /*\n    const handle = setTimeout(() => {\n      reject(new Error(\"transaction timeout\"));\n    }, 60000);\n    */\n    window.xfi.thorchain.request(\n      {\n        method: action,\n        params: [\n          {\n            from,\n            memo,\n            asset,\n            recipient,\n            amount: { amount: amount, decimals: 8 },\n          },\n        ],\n      },\n      (err, result) => {\n        // clearTimeout(handle);\n        if (err) return reject(err);\n        resolve(result);\n      }\n    );\n  });\n}\n\nexport default function NodeManualTransaction({ data, path, updateWorkspace }) {\n  const [{ selected: wallet }] = useGlobalState(\"wallets\", {});\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [transactionId, setTransactionId] = useState();\n  const [options, setOptions] = useState(\n    merge(\n      {\n        type: \"transfer\",\n        action: \"swap\",\n        percent: \"100\",\n      },\n      data.options || {}\n    )\n  );\n\n  function computeMemo() {\n    const { asset = \"\", address = \"\", limit = \"\", percent = \"\" } = options;\n    const p = parseInt(parseFloat(percent) * 100);\n    let memo = options.action.toUpperCase();\n    if (options.action === \"swap\") {\n      memo += `:${asset}:${address}:${limit}`;\n    } else if (options.action === \"add\") {\n      memo += `:${asset}:${address}`;\n    } else if (options.action === \"withdraw\") {\n      memo += `:${asset}:${p}${options.assym ? \":\" + options.assym : \"\"}`;\n    } else if (options.action === \"bond\" || options.action === \"leave\") {\n      memo += `:${address}`;\n    } else if (options.action === \"unbond\") {\n      memo += `:${address}:${p}`;\n    }\n    return memo;\n  }\n  function onOptionChange(key, value) {\n    const newOptions = merge(options, { [key]: value });\n    setOptions(newOptions);\n    const updateFn = (n) =>\n      merge(n, { data: merge(n.data, { options: newOptions }) });\n    updateWorkspace(updateFn, path);\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    if (!wallet?.address) {\n      return setError(\"no wallet connected\");\n    }\n    const amount = parseInt(parseFloat(options.amount) * Math.pow(10, 8));\n    if (Number.isNaN(amount)) {\n      return setError(\"amount is not a valid number\");\n    }\n    if (options.type === \"transfer\") {\n      if (!isValidThorAddress(options.address)) {\n        return setError(\"recipient address is not valid\");\n      }\n    } else if (options.type === \"deposit\") {\n      if ([\"swap\"].includes(options.action)) {\n      }\n    }\n    try {\n      setIsLoading(false);\n      if (options.type === \"transfer\") {\n        const txId = await thorchainTransaction(\"transfer\", {\n          from: wallet.address,\n          //asset: { chain: \"THOR\", symbol: \"RUNE\", ticker: \"RUNE\" },\n          amount: amount,\n          recipient: options.address,\n          //memo: \"\",\n        });\n        setTransactionId(txId);\n      } else if (options.type === \"deposit\") {\n        const memo = computeMemo();\n        const txId = await thorchainTransaction(\"deposit\", {\n          from: wallet.address,\n          amount: amount,\n          memo: memo,\n        });\n        setTransactionId(txId);\n      }\n    } catch (err) {\n      console.error(err);\n      setError(err.toString());\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <Box\n      title=\"Manual Transaction\"\n      path={path}\n      updateWorkspace={updateWorkspace}\n    >\n      <form className=\"p-2\" onSubmit={onSubmit}>\n        <div className=\"row mb-2\">\n          <div className=\"\">\n            <label>type</label>\n            <select\n              value={options.type}\n              onChange={(e) => onOptionChange(\"type\", e.target.value)}\n            >\n              <option value=\"transfer\">transfer</option>\n              <option value=\"deposit\">deposit</option>\n            </select>\n          </div>\n          <div className=\"\">\n            <label>input amount</label>\n            <input\n              type=\"text\"\n              value={options.amount || \"\"}\n              onChange={(e) => onOptionChange(\"amount\", e.target.value)}\n              placeholder=\"0.0\"\n            />\n          </div>\n        </div>\n        {options.type === \"deposit\" ? (\n          <div>\n            <div className=\"row mb-2\">\n              <div className=\"\">\n                <label>action</label>\n                <select\n                  value={options.action}\n                  onChange={(e) => onOptionChange(\"action\", e.target.value)}\n                >\n                  <option value=\"swap\">swap</option>\n                  <option value=\"add\">add</option>\n                  <option value=\"withdraw\">withdraw</option>\n                  <option value=\"bond\">bond</option>\n                  <option value=\"unbond\">unbond</option>\n                  <option value=\"leave\">leave</option>\n                </select>\n              </div>\n              {[\"swap\", \"add\", \"withdraw\"].includes(options.action) ? (\n                <div>\n                  <label>asset</label>\n                  <input\n                    type=\"text\"\n                    value={options.asset || \"\"}\n                    onChange={(e) => onOptionChange(\"asset\", e.target.value)}\n                    placeholder=\"e.g. BTC.BTC\"\n                  />\n                </div>\n              ) : null}\n              {[\"bond\", \"unbond\", \"leave\"].includes(options.action) ? (\n                <div className=\"\">\n                  <label>address</label>\n                  <input\n                    type=\"text\"\n                    value={options.address || \"\"}\n                    onChange={(e) => onOptionChange(\"address\", e.target.value)}\n                    placeholder=\"e.g. thor1a2b3c...\"\n                  />\n                </div>\n              ) : null}\n            </div>\n            <div className=\"row mb-2\">\n              {[\"swap\", \"add\"].includes(options.action) ? (\n                <div className=\"\">\n                  <label>address (optional)</label>\n                  <input\n                    type=\"text\"\n                    value={options.address || \"\"}\n                    onChange={(e) => onOptionChange(\"address\", e.target.value)}\n                    placeholder=\"e.g. thor1a2b3c...\"\n                  />\n                </div>\n              ) : null}\n              {options.action === \"swap\" ? (\n                <div className=\"\">\n                  <label>limit</label>\n                  <input\n                    type=\"text\"\n                    value={options.limit || \"\"}\n                    onChange={(e) => onOptionChange(\"limit\", e.target.value)}\n                  />\n                </div>\n              ) : null}\n              {[\"withdraw\", \"unbond\"].includes(options.action) ? (\n                <div className=\"\">\n                  <label>percentage</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"100\"\n                    step=\"0.01\"\n                    value={options.percent || \"\"}\n                    onChange={(e) => onOptionChange(\"percent\", e.target.value)}\n                  />\n                </div>\n              ) : null}\n              {[\"withdraw\"].includes(options.action) ? (\n                <div>\n                  <label>assym. asset (optional)</label>\n                  <input\n                    type=\"text\"\n                    value={options.assym || \"\"}\n                    onChange={(e) => onOptionChange(\"assym\", e.target.value)}\n                    placeholder=\"e.g. THOR.RUNE\"\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        ) : (\n          <div className=\"mb-2\">\n            <label>recipient address</label>\n            <input\n              type=\"text\"\n              value={options.address || \"\"}\n              onChange={(e) => onOptionChange(\"address\", e.target.value)}\n              placeholder=\"e.g. thor1a2b3c...\"\n            />\n          </div>\n        )}\n\n        {options.type === \"deposit\" ? (\n          <div className=\"truncate mb-2\">memo: {computeMemo()}</div>\n        ) : null}\n        {error ? <div className=\"text-red mb-2\">{error}</div> : null}\n        <button type=\"submit\" className=\"btn w-full mb-2\" disabled={isLoading}>\n          {isLoading ? \"loading...\" : \"submit\"}\n        </button>\n        {transactionId ? (\n          <div className=\"truncate\">\n            tx:{\" \"}\n            <a\n              href={explorerTransactionUrl(wallet.network, transactionId)}\n              target=\"_blank\"\n            >\n              {transactionId}\n            </a>\n          </div>\n        ) : null}\n      </form>\n    </Box>\n  );\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { merge } from \"../utils\";\nimport NodeEmpty from \"./nodeEmpty\";\nimport NodeStats from \"./nodeStats\";\nimport NodePools from \"./nodePools\";\nimport NodeWallet from \"./nodeWallet\";\nimport NodeChart from \"./nodeChart\";\nimport NodeHistory from \"./nodeHistory\";\nimport NodeManualTransaction from \"./nodeManualTransaction\";\n\nexport default function Node({\n  type,\n  size,\n  data,\n  path,\n  updateWorkspace,\n  top,\n  bottom,\n  left,\n  right,\n}) {\n  const nodeRef = useRef();\n  const [isDragging, setIsDragging] = useState(false);\n\n  const onMouseMove = (e) => {\n    let el = nodeRef.current;\n    let nodes = el.querySelectorAll(\".workspace-node\");\n    let rect = el.getBoundingClientRect();\n\n    let pos = type === \"hsplit\" ? e.clientX : e.clientY;\n    let edge = type === \"hsplit\" ? rect.left : rect.top;\n    let size = type === \"hsplit\" ? rect.width : rect.height;\n    let percentWidth = ((pos - edge) / size) * 100;\n    percentWidth = Math.min(85, Math.max(15, percentWidth));\n    percentWidth = Math.round(percentWidth / 5) * 5;\n    nodes[0].style.flexBasis = percentWidth + \"%\";\n    nodes[1].style.flexBasis = 100 - percentWidth + \"%\";\n\n    if (type === \"hsplit\") {\n      updateWorkspace(\n        (node) =>\n          merge(node, {\n            size: percentWidth,\n          }),\n        path.concat([\"left\"])\n      );\n      updateWorkspace(\n        (node) =>\n          merge(node, {\n            size: 100 - percentWidth,\n          }),\n        path.concat([\"right\"])\n      );\n    } else {\n      updateWorkspace(\n        (node) =>\n          merge(node, {\n            size: percentWidth,\n          }),\n        path.concat([\"top\"])\n      );\n      updateWorkspace(\n        (node) =>\n          merge(node, {\n            size: 100 - percentWidth,\n          }),\n        path.concat([\"bottom\"])\n      );\n    }\n  };\n  function onMouseDown() {\n    setIsDragging(true);\n  }\n  function onMouseUp() {\n    setIsDragging(false);\n    window.removeEventListener(\"mousemove\", onMouseMove);\n  }\n\n  useEffect(() => {\n    if (!isDragging) return;\n    window.addEventListener(\"mouseup\", onMouseUp);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    return () => {\n      window.removeEventListener(\"mouseup\", onMouseUp);\n      window.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [isDragging]);\n\n  const renderNode = () => {\n    switch (data.type) {\n      case \"empty\":\n        return (\n          <NodeEmpty\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      case \"stats\":\n        return (\n          <NodeStats\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      case \"pools\":\n        return (\n          <NodePools\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      case \"wallet\":\n        return (\n          <NodeWallet\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      case \"chart\":\n        return (\n          <NodeChart\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      case \"history\":\n        return (\n          <NodeHistory\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      case \"manualTransaction\":\n        return (\n          <NodeManualTransaction\n            data={data}\n            path={path}\n            updateWorkspace={updateWorkspace}\n          />\n        );\n      default:\n        throw new Error(\"Unknown terminal node type: \" + data.type);\n    }\n  };\n  switch (type) {\n    case \"vsplit\":\n      return (\n        <div\n          ref={nodeRef}\n          className={\n            \"workspace-node workspace-vsplit \" +\n            (isDragging ? \"is-dragging\" : \"\")\n          }\n          style={{ flexBasis: size + \"%\" }}\n        >\n          <Node\n            {...top}\n            path={path.concat([\"top\"])}\n            updateWorkspace={updateWorkspace}\n          />\n          <div\n            className={\n              \"workspace-resize-handle \" + (isDragging ? \"is-dragging\" : \"\")\n            }\n            onMouseDown={onMouseDown}\n          />\n          <Node\n            {...bottom}\n            path={path.concat([\"bottom\"])}\n            updateWorkspace={updateWorkspace}\n          />\n        </div>\n      );\n    case \"hsplit\":\n      return (\n        <div\n          ref={nodeRef}\n          className={\n            \"workspace-node workspace-hsplit \" +\n            (isDragging ? \"is-dragging\" : \"\")\n          }\n          style={{ flexBasis: size + \"%\" }}\n        >\n          <Node\n            {...left}\n            path={path.concat([\"left\"])}\n            updateWorkspace={updateWorkspace}\n          />\n          <div\n            className={\n              \"workspace-resize-handle \" + (isDragging ? \"is-dragging\" : \"\")\n            }\n            onMouseDown={onMouseDown}\n          />\n          <Node\n            {...right}\n            path={path.concat([\"right\"])}\n            updateWorkspace={updateWorkspace}\n          />\n        </div>\n      );\n    case \"node\":\n      return (\n        <div\n          ref={nodeRef}\n          className=\"workspace-node\"\n          style={{ flexBasis: size + \"%\" }}\n        >\n          {renderNode()}\n        </div>\n      );\n    default:\n      throw new Error(\"Unknown node type: \" + type);\n  }\n}\n","import { useEffect, useState } from \"react\";\nimport { merge, formatAddress, useGlobalState } from \"../utils\";\nimport { defaultWallets } from \"../constants\";\n\nexport default function ModalConfigureAddress({ onClose }) {\n  const [wallets, setWallets] = useGlobalState('wallets', defaultWallets);\n  const [newWatchedAddress, setNewWatchedAddress] = useState('');\n  const [newWatchedLabel, setNewWatchedLabel] = useState('');\n\n  useEffect(() => {\n    const handler = (e) => { if (onClose && e.key === \"Escape\") onClose(); };\n    window.addEventListener(\"keyup\", handler);\n    return () => window.removeEventListener(\"keyup\", handler);\n  }, []);\n\n  function onConnectXdefi() {\n    if (!window.xfi || !window.xfi.thorchain) {\n      return alert('XDEFI is not installed!');\n    }\n    window.xfi.thorchain.request(\n      { method: \"request_accounts\", params: [] },\n      (err, accounts) => {\n        if (err) {\n          console.log(err);\n          return alert('Error connecting to XDEFI: ' + err.message);\n        }\n        const newWallet = {\n          type: 'xdefi',\n          address: accounts[0],\n          network: window.xfi.thorchain.network,\n        };\n        setWallets(merge(wallets, { connected: newWallet, selected: newWallet }));\n      }\n    );\n  }\n\n  function onSelect(w) {\n    setWallets(merge(wallets, { selected: w }));\n    onClose();\n  }\n\n  function onCopy(w, e) {\n    e.stopPropagation();\n    navigator.clipboard.writeText(w.address);\n  }\n\n  function onRemove(index, e) {\n    e.stopPropagation();\n    setWallets(merge(wallets, {\n      watched: wallets.watched.filter((_, i) => i !== index),\n    }));\n  }\n\n  function onRemoveConnected(e) {\n    e.stopPropagation();\n    let selected = wallets.selected;\n    if (selected.address === wallets.connected.address) selected = null;\n    setWallets(merge(wallets, { connected: null, selected }));\n  }\n\n  function onWatchedSubmit(e) {\n    e.preventDefault();\n    const newWallet = {\n      type: 'watched',\n      address: newWatchedAddress,\n      network: newWatchedAddress.startsWith('thor') ? 'mainnet' : 'testnet',\n      label: newWatchedLabel,\n    };\n    setNewWatchedAddress('');\n    setNewWatchedLabel('');\n    setWallets(merge(wallets, { watched: wallets.watched.concat([newWallet]) }));\n  }\n\n  return (\n    <div className=\"modal\" onClick={onClose}>\n      <div className=\"modal-overlay\" />\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <h1>Wallets</h1>\n\n        <div className=\"text-bold mb-2 mt-4\">Connected</div>\n\n        {wallets.connected ? (\n          <div className=\"row p-2 bg-gray-800 rounded pointer hover:opacity-75\" onClick={onSelect.bind(null, wallets.connected)}>\n            <div>{formatAddress(wallets.connected.address)} ({wallets.connected.network})</div>\n            <div className=\"flex-shrink text-right\">\n              <a className=\"ml-2\" onClick={onCopy.bind(null, wallets.connected)}>Copy</a>\n              <a className=\"ml-2\" onClick={onRemoveConnected}>Remove</a>\n            </div>\n          </div>\n        ) : (\n          <button className=\"btn w-full\" onClick={onConnectXdefi}>Connect XDEFI</button>\n        )}\n        \n        <div className=\"text-bold mb-2 mt-4\">Watched</div>\n\n        {wallets.watched.map((w, i) => (\n          <div className=\"row p-2 mb-2 bg-gray-800 rounded pointer hover:opacity-75\" key={w.address} onClick={onSelect.bind(null, w)}>\n            <div>{formatAddress(w.address)} {w.label?`(${w.label})`:''} ({w.network})</div>\n            <div className=\"flex-shrink text-right\">\n              <a className=\"ml-2\" onClick={onCopy.bind(null, w)}>Copy</a>\n              <a className=\"ml-2\" onClick={onRemove.bind(null, i)}>Remove</a>\n            </div>\n          </div>\n        ))}\n\n        <form className=\"row\" onSubmit={onWatchedSubmit}>\n          <div style={{ flex: '1' }}>\n            <label>Address</label>\n            <input type=\"text\" value={newWatchedAddress} onChange={e => setNewWatchedAddress(e.target.value)} />\n          </div>\n          <div style={{ flex: '0 0 150px' }}>\n            <label>Label (opt)</label>\n            <input type=\"text\" value={newWatchedLabel} onChange={e => setNewWatchedLabel(e.target.value)} />\n          </div>\n          <div style={{ flex: '0 0 60px' }}>\n            <label>&nbsp;</label>\n            <button type=\"submit\" className=\"btn w-full\">Add</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { merge, formatAddress, useGlobalState, midgardRequest } from \"./utils\";\nimport { defaultWallets, defaultWorksapces } from \"./constants\";\n\nimport Icon from \"./components/icon\";\nimport Node from \"./components/node\";\nimport ModalConfigureAddress from \"./components/modalConfigureAddress\";\n\nconst nodeSiblingNameMap = {\n  left: \"right\",\n  right: \"left\",\n  top: \"bottom\",\n  bottom: \"top\",\n};\n\nfunction App() {\n  const [modal, setModal] = useState({});\n  const [{ selected: wallet }] = useGlobalState(\"wallets\", {});\n  const [pools, setPools] = useGlobalState(\"pools\", []);\n  const [stats, setStats] = useGlobalState(\"stats\", null);\n  const [wallets, setWallets] = useGlobalState(\"wallets\");\n  const [workspaces, setWorkspaces] = useState(\n    JSON.parse(localStorage.workspaces || defaultWorksapces)\n  );\n  const [selectedWorkspaceIndex, setSelectedWorkspaceIndex] = useState(0);\n  const selectedWorkspace = workspaces[selectedWorkspaceIndex];\n\n  useEffect(() => {\n    if (!localStorage.wallets) return;\n    setWallets(JSON.parse(localStorage.wallets));\n  }, []);\n  useEffect(() => {\n    const updated = JSON.stringify(wallets);\n    if (localStorage.wallets !== updated) localStorage.wallets = updated;\n  }, [wallets]);\n  useEffect(() => {\n    const refresh = () => {\n      const n = wallet?.network || \"mainnet\";\n      midgardRequest(n, \"/pools\").then(setPools);\n      midgardRequest(n, \"/stats\").then(setStats);\n    };\n    refresh();\n    const handle = setInterval(refresh, 15000);\n    return () => clearInterval(handle);\n  }, [wallet?.network]);\n\n  function onConfigureAddress() {\n    setModal({ type:'configureAddress' });\n  }\n\n  function onUpdateWorkspace(update, path) {\n    if (path.length === 0) {\n      selectedWorkspace.root = update(selectedWorkspace.root);\n    } else {\n      const parent = path.slice(0, -1).reduce((parent, leaf) => {\n        return parent[leaf];\n      }, selectedWorkspace.root);\n      const tail = path[path.length - 1];\n      let node = parent ? parent[tail] : selectedWorkspace.root;\n      node = update(node);\n      if (!node) {\n        Object.assign(\n          parent,\n          merge(parent[nodeSiblingNameMap[tail]], { size: parent.size })\n        );\n      } else {\n        parent[tail] = node;\n      }\n    }\n\n    workspaces[selectedWorkspaceIndex] = merge({}, selectedWorkspace);\n    setWorkspaces(workspaces.slice());\n    // debugging\n    window.globalWorkspaces = workspaces;\n  }\n\n  return (\n    <div>\n      <header className=\"header\">\n        <a className=\"header-brand\" href=\"/\">\n          thorbelt\n        </a>\n        <div className=\"header-workspaces\">\n          <WorkspacesNav\n            workspaces={workspaces}\n            setWorkspaces={setWorkspaces}\n            selectedWorkspaceIndex={selectedWorkspaceIndex}\n            setSelectedWorkspaceIndex={setSelectedWorkspaceIndex}\n          />\n        </div>\n        <div className=\"nav nav-right\">\n          <a className=\"nav-text text-primary\" onClick={onConfigureAddress}>\n            {wallet ? formatAddress(wallet.address) + \" (\" + wallet.network + \")\" : \"(no wallet connected)\"}\n          </a>\n        </div>\n      </header>\n      <div className=\"workspace\">\n        <Node\n          {...selectedWorkspace.root}\n          path={[]}\n          updateWorkspace={onUpdateWorkspace}\n        />\n      </div>\n      {modal.type === 'configureAddress' ? (\n        <ModalConfigureAddress onClose={() => setModal({})} />\n      ) : null}\n    </div>\n  );\n}\n\nfunction WorkspacesNav({\n  workspaces,\n  setWorkspaces,\n  selectedWorkspaceIndex,\n  setSelectedWorkspaceIndex,\n}) {\n  function onAdd(e) {\n    e.preventDefault();\n    setWorkspaces((workspaces) => {\n      workspaces = workspaces.concat({\n        name: \"new workspace\",\n        root: { type: \"node\", size: 100, data: { type: \"empty\" } },\n      });\n      return workspaces;\n    });\n  }\n  function onRemove(e) {\n    e.preventDefault();\n    setWorkspaces((workspaces) => {\n      workspaces.splice(selectedWorkspaceIndex, 1);\n      return workspaces.splice();\n    });\n  }\n  function onRename(e) {\n    e.preventDefault();\n    const newName = prompt(\"New Name\", workspaces[selectedWorkspaceIndex].name);\n    if (!newName) return;\n    setWorkspaces((workspaces) => {\n      const i = selectedWorkspaceIndex;\n      workspaces[i] = { ...workspaces[i], name: newName };\n      return workspaces.slice();\n    });\n  }\n  function onSave(e) {\n    e.preventDefault();\n    localStorage.workspaces = JSON.stringify(workspaces);\n  }\n\n  return (\n    <div className=\"workspaces-nav\">\n      <div className=\"workspaces-nav-current\">\n        {workspaces[selectedWorkspaceIndex].name}\n      </div>\n      <div className=\"workspaces-nav-dropdown\">\n        {workspaces.map((w, i) => (\n          <a\n            key={i}\n            onClick={() => setSelectedWorkspaceIndex(i)}\n            className={selectedWorkspaceIndex === i ? \"is-active\" : \"\"}\n          >\n            {w.name}\n          </a>\n        ))}\n        <a onClick={onAdd} title=\"add\">\n          <Icon name=\"plus\" /> add\n        </a>\n        <a onClick={onRemove} title=\"delete\">\n          <Icon name=\"trash\" /> delete\n        </a>\n        <a onClick={onRename} title=\"rename\">\n          <Icon name=\"edit\" /> rename\n        </a>\n        <a onClick={onSave} title=\"save\">\n          <Icon name=\"save\" /> save\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}